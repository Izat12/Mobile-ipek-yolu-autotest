plugins {
    id 'java'
    id "org.gradle.test-retry" version "1.5.3"
    id "io.qameta.allure" version "2.11.2"
}

tasks.withType(Test) {
    systemProperty "allure.results.directory", "build/allure-results"
}

group 'org.example'
version '1.0-SNAPSHOT'

def allureVersion = "2.19.0",
    junitVersion = "5.8.2",
    slf4jVersion = "1.7.32"

compileJava.options.encoding = 'UTF-8'
javadoc.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'com.github.romankh3:image-comparison:4.4.0'
    implementation(
            "io.qameta.allure:allure-junit5:$allureVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "io.appium:java-client:7.6.0",
            'com.codeborne:selenide-appium:2.7.1',
            'org.projectlombok:lombok:1.18.30',
            "org.aeonbits.owner:owner:1.0.12",
            'io.qameta.allure:allure-java-commons:2.23.0',
            'org.aspectj:aspectjweaver:1.9.9.1',
            'io.qameta.allure:allure-commandline:2.12.1',
            "org.slf4j:slf4j-simple:$slf4jVersion",
            'org.slf4j:slf4j-simple:2.0.11',
            "org.junit.jupiter:junit-jupiter-api:$junitVersion")
    testRuntimeOnly(

            "org.junit.jupiter:junit-jupiter-engine:$junitVersion")
}

test {
//    retry {
//        maxRetries = 3
//    }
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
        exceptionFormat "full"
    }
    useJUnitPlatform()
}

//test {
//    useJUnitPlatform()
//
//    testLogging {
//        lifecycle {
//            events "failed"
//            exceptionFormat "short"
//        }
//    }
//}